version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: kev_postgres
    environment:
      POSTGRES_USER: kev_user
      POSTGRES_PASSWORD: kev_password
      POSTGRES_DB: kev_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kev_user -d kev_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: kev_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # pgAdmin (개발용 - 필요시 주석 해제)
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: kev_pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@kev.local
  #     PGLADMIN_DEFAULT_PASSWORD: admin123
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: kev_network